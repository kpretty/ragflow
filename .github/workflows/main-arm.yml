name: Build ARM64 Docker Images

on:
  push:
    branches: [ main-arm64 ] # 根据需要触发分支调整
  pull_request:
    branches: [ main-arm64 ]

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 设置 ARM64 构建环境
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    # 配置 Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 安装 Python 和运行依赖下载
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # 根据实际需要调整版本

    - name: Install uv and download deps
      run: |
        pip install uv
        uv run download_deps.py

    # 构建依赖镜像
    - name: Build dependencies image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.deps
        platforms: linux/arm64
        tags: infiniflow/ragflow_deps:latest
        load: true # 将镜像加载到本地镜像列表

    # 构建主镜像
    - name: Build main image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        platforms: linux/arm64
        build-args: |
          LIGHTEN=1
        tags: infiniflow/ragflow:nightly-slim
        load: true
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push images
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          infiniflow/ragflow_deps:latest
          infiniflow/ragflow:nightly-slim
